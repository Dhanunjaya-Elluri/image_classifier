[project]
name = "image-classifier"
version = "0.1.0"
description = "Image classification service with monitoring"
requires-python = ">=3.12"
authors = [
    {name = "Dhanunjaya Elluri", email = "dhanunjayet@gmail.com"}
]
dependencies = [
    "fastapi==0.115.6",
    "uvicorn==0.34.0",
    "onnxruntime==1.20.1",
    "pillow==11.1.0",
    "numpy==2.2.1",
    "streamlit==1.41.1",
    "python-multipart==0.0.20",
    "pydantic==2.10.5",
    "pydantic-settings==2.7.1",
    "scipy==1.15.1",
    "loguru==0.7.3",
    "plotly==5.24.1",
    "prometheus-client==0.21.1",
    "starlette-prometheus==0.10.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
test = [
    "pytest==8.3.4",
    "httpx==0.28.1",
    "pytest-asyncio==0.25.0",
    "pytest-cov==6.0.0",
    "pytest-order==1.2.0",
    "requests==2.32.3",
    "pyyaml==6.0.2"
]
lint = [
    "pre-commit==4.0.1",
    "black==24.10.0",
    "ruff==0.8.4",
    "mypy==1.13.0",
    "isort==5.13.2",
    "bandit==1.8.0",
    "types-pyyaml>=6.0",
    "types-requests>=2.32",
    "types-setuptools>=75.0",
    "types-toml>=0.10"
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]
ignore = ["E501"]  # Let black handle line length

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
files = ["src/**/*.py", "tests/**/*.py"]
exclude = ["tests/data/*"]
plugins = [
    "pydantic.mypy"
]
explicit_package_bases = true
namespace_packages = true

[[tool.mypy.overrides]]
module = ["onnxruntime.*", "PIL.*", "streamlit.*", "plotly.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --tb=short"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_default_fixture_loop_scope = "function"
